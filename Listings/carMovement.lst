C51 COMPILER V9.54   CARMOVEMENT                                                           11/21/2024 22:02:59 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE CARMOVEMENT
OBJECT MODULE PLACED IN .\Objects\carMovement.obj
COMPILER INVOKED BY: D:\mcu\Keil5\C51\BIN\C51.EXE carMovement.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\carMovement.lst) OBJECT(.\Objects\carMovement.obj)

line level    source

   1          #include <REGX52.H>
   2          #include <intrins.h>
   3          
   4          sbit IN1F = P2^0;
   5          sbit IN2F = P2^1;
   6          sbit IN3F = P0^1;
   7          sbit IN4F = P0^0;
   8          
   9          sbit IN1B = P2^2;
  10          sbit IN2B = P2^3;
  11          sbit IN3B = P0^2;
  12          sbit IN4B = P0^3;
  13          
  14          #define PWM_PERIOD 64
  15          unsigned char dutyCycle1 = 32; //Left
  16          unsigned char dutyCycle2 = 32; //Right
  17          unsigned char States = 0;
  18          unsigned char Fliping = 0; //1 means enable, 0 means disable
  19          
  20          void Timer0_Init(void)
  21          {
  22   1          TMOD |= 0x01;
  23   1          TH0 = 0xFF;
  24   1          TL0 = 0x00; 
  25   1          ET0 = 1;
  26   1          EA = 1;
  27   1          TR0 = 1;
  28   1      }
  29          
  30          void Timer1_Init(void)
  31          {
  32   1          TMOD |= 0x10;
  33   1          TH1 = 0xFF;
  34   1          TL1 = 0x00; 
  35   1          ET1 = 1;
  36   1          TR1 = 1;
  37   1      }
  38          
  39          void Timer0_ISR(void) interrupt 1
  40          {
  41   1          static unsigned char pwmCounter1 = 0;
  42   1          TH0 = 0xFF;
  43   1          TL0 = 0x00;
  44   1      
  45   1          pwmCounter1++;
  46   1          if (pwmCounter1 >= PWM_PERIOD)
  47   1          {
  48   2              pwmCounter1 = 0;
  49   2          }
  50   1      
  51   1          if (pwmCounter1 < dutyCycle1 && (States != 3 && States != 4 && States != 5 && States != 6))
  52   1          {
  53   2              if (Fliping == 1 && States == 2)
  54   2              {
C51 COMPILER V9.54   CARMOVEMENT                                                           11/21/2024 22:02:59 PAGE 2   

  55   3                  IN1F = 1;
  56   3                  IN2F = 0;
  57   3                  IN1B = 0;
  58   3                  IN2B = 1;
  59   3              }
  60   2              else
  61   2              {
  62   3                  IN1F = 0;
  63   3                  IN2F = 1;
  64   3                  IN1B = 1;
  65   3                  IN2B = 0;
  66   3              }
  67   2          }
  68   1          else if (pwmCounter1 >= dutyCycle1 && (States != 3 && States != 4 && States != 5 && States != 6))
  69   1          {
  70   2              IN1F = 0;
  71   2              IN2F = 0;
  72   2              IN1B = 0;
  73   2              IN2B = 0;
  74   2          }
  75   1      }
  76          
  77          void Timer1_ISR(void) interrupt 3
  78          {
  79   1          static unsigned char pwmCounter2 = 0;
  80   1          TH1 = 0xFF;
  81   1          TL1 = 0x00;
  82   1      
  83   1          pwmCounter2++;
  84   1          if (pwmCounter2 >= PWM_PERIOD)
  85   1          {
  86   2              pwmCounter2 = 0;
  87   2          }
  88   1      
  89   1          if (pwmCounter2 < dutyCycle2 && (States != 3 && States != 4 && States != 5 && States != 6))
  90   1          {
  91   2              if (Fliping == 1 && States == 1)
  92   2              {
  93   3                  IN3F = 0;
  94   3                  IN4F = 1;
  95   3                  IN3B = 0;
  96   3                  IN4B = 1;
  97   3              }
  98   2              else
  99   2              {
 100   3                  IN3F = 1;
 101   3                  IN4F = 0;
 102   3                  IN3B = 1;
 103   3                  IN4B = 0;
 104   3              }
 105   2          }
 106   1          else if (pwmCounter2 >= dutyCycle2 && (States != 3 && States != 4 && States != 5 && States != 6))
 107   1          {
 108   2              IN3F = 0;
 109   2              IN4F = 0;
 110   2              IN3B = 0;
 111   2              IN4B = 0;
 112   2          }
 113   1      }
 114          
 115          void carMoveForward(short int level)
 116          {
C51 COMPILER V9.54   CARMOVEMENT                                                           11/21/2024 22:02:59 PAGE 3   

 117   1          States = 0;
 118   1          if (level == 1)
 119   1          {
 120   2              dutyCycle1 = 16;
 121   2              dutyCycle2 = 16;
 122   2          }
 123   1          else if (level == 2)
 124   1          {
 125   2              dutyCycle1 = 32;
 126   2              dutyCycle2 = 32;
 127   2          }
 128   1          else if (level == 3)
 129   1          {
 130   2              dutyCycle1 = 48;
 131   2              dutyCycle2 = 48;
 132   2          }
 133   1          else if (level == 4)
 134   1          {
 135   2              dutyCycle1 = 63;
 136   2              dutyCycle2 = 63;
 137   2          }
 138   1      }
 139          
 140          void carTurnRight(short int level)
 141          {
 142   1              States = 1;
 143   1          if (level == 1)
 144   1          {
 145   2              Fliping = 0;
 146   2              dutyCycle1 = 48;
 147   2              dutyCycle2 = 16;
 148   2          }
 149   1          else if (level == 2)
 150   1          {
 151   2              Fliping = 1;
 152   2              dutyCycle1 = 48;
 153   2              dutyCycle2 = 16;
 154   2          }
 155   1          else if (level == 3)
 156   1          {
 157   2              Fliping = 1;
 158   2              dutyCycle1 = 48;
 159   2              dutyCycle2 = 32;
 160   2          }
 161   1      }
 162          
 163          void carTurnLeft(short int level)
 164          {
 165   1          States = 2;
 166   1          if (level == 1)
 167   1          {
 168   2              Fliping = 0;
 169   2              dutyCycle1 = 16;
 170   2              dutyCycle2 = 48;
 171   2          }
 172   1          else if (level == 2)
 173   1          {
 174   2              Fliping = 1;
 175   2              dutyCycle1 = 16;
 176   2              dutyCycle2 = 48;
 177   2          }
 178   1          else if (level == 3)
C51 COMPILER V9.54   CARMOVEMENT                                                           11/21/2024 22:02:59 PAGE 4   

 179   1          {
 180   2              Fliping = 1;
 181   2              dutyCycle1 = 32;
 182   2              dutyCycle2 = 48;
 183   2          }
 184   1      }
 185          
 186          void carStop()
 187          {
 188   1          States = 3;
 189   1          IN1F = 0;
 190   1          IN2F = 0;
 191   1          IN3F = 0;
 192   1          IN4F = 0;
 193   1          IN1B = 0;
 194   1          IN2B = 0;
 195   1          IN3B = 0;
 196   1          IN4B = 0;
 197   1      }
 198          
 199          void carMoveBackward()
 200          {
 201   1          States = 4;
 202   1              IN1F = 1;
 203   1              IN2F = 0;
 204   1              IN3F = 0;
 205   1              IN4F = 1;
 206   1      
 207   1          IN1B = 0;
 208   1          IN2B = 1;
 209   1          IN3B = 0;
 210   1          IN4B = 1;
 211   1      }
 212          
 213          void carSharpRight()
 214          {
 215   1          States = 5;
 216   1              IN1F = 0;
 217   1              IN2F = 1;
 218   1              IN3F = 0;
 219   1              IN4F = 1;
 220   1      
 221   1          IN1B = 1;
 222   1          IN2B = 0;
 223   1          IN3B = 0;
 224   1          IN4B = 1;
 225   1      }
 226          
 227          void carSharpLeft()
 228          {
 229   1          States = 6;
 230   1              IN1F = 1;
 231   1              IN2F = 0;
 232   1              IN3F = 1;
 233   1              IN4F = 0;
 234   1      
 235   1          IN1B = 0;
 236   1          IN2B = 1;
 237   1          IN3B = 1;
 238   1          IN4B = 0;
 239   1      }

C51 COMPILER V9.54   CARMOVEMENT                                                           11/21/2024 22:02:59 PAGE 5   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    507    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
